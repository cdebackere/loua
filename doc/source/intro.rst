Introducing uascript
====================

Excel macros are written in a modified version of the Visual Basic programming
language. This is an example for the use of Domain Specific Languages (DSL). DSL
enable users to access powerful methods from an underlying technology while
abstracting away unneeded complexity.

uascript is a Domain Specific Language for OPC UA based on the Lua_ programming
language and the open62541_ OPC UA library. uascript makes it really easy to
prototype OPC UA applications. Its main features are:

Scripting Language
   No compilation and no development infrastructure required

Interactive
   Just open up the uascript shell, start an OPC UA server and add functionality
   to the live system

Garbage-Collected
   No need to worry about memory handling in the underlying C-based library

Transparent
   Every OPC UA data type and the messages sent between clients and servers can
   be introspected by the user. There is no "magic" under the hood.

Easy Interfacing
   Lua bindings are available for most programming languages and many important
   server applications, such as databases. Bindings for custom programs can be
   written manually or autogenerated with tools such as SWIG_.

Fast
   Lua is one of the fastest scripting languages available. The open62541
   library in the background is written in C and can handle tens of thousands of
   requests per second.

Now start the uascript executable and insert the following:

.. code-block:: lua

   server = ua.Server(48480)
   server:start()

Et voil√†, that's it! You just built and started your first OPC UA server with
uascript. You can connect to it at ``opc.tcp://localhost:48480`` with any OPC UA
client. Stopping the server works similarly. You might have already guessed how.

.. code-block:: lua

   server:stop()

The following chapers can be read linearly and introduce OPC UA as well as the
Lua language. Note that the uascript executable acts as a normal Lua interpreter
when no OPC UA-specific concepts are used. If you want to further familiarize
yourself with Lua, the first edition of `Programming in Lua`__, written by the
inventor of Lua, is available online and remains largely relevant.

.. _Lua: http://www.lua.org/
.. _open62541: http://open62541.org/
.. _SWIG: http://www.swig.org/
.. __: http://www.lua.org/pil/contents.html
